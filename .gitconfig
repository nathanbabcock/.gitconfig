[user]
	name = nbabcock
	email = nathan.r.babcock@gmail.com
	signingkey = 10BE24B1BAA45E1A
[core]
	autocrlf = false # use .gitattributes to enforce line endings on a per-repo basis as needed
  ignorecase = false
[init]
	defaultBranch = main
[rebase]
	autoStash = true
[merge]
	autoStash = true
  conflictStyle = diff3
[checkout]
	autostash = true
[pull]
	rebase = true
[push]
	autoSetupRemote = true
[rerere]
  enabled = true
[pgp]
	format = ssh
[commit]
	gpgsign = true
[submodule]
  recurse = true
[alias]
  # Simple aliases
	c = commit
  cm = commit -m
  cam = commit -am
  co = checkout
	a = add .
	p = push
	s = status
	st = status

  # Scripts
  up = "!git remote update -p; git merge --ff-only @{u}"
	undo = reset --soft HEAD^
  amend = "!git add .; git commit --amend --no-edit; git force; git status"
  initial = "!git add .; git commit -m \"initial commit \"; git push; git status"
  force = push -f
	aliases = config --get-regexp '^alias\\.'
  lazy = "!f() { git add .; git commit -m \"$1\"; git push; git status; }; f"
  release = "!f() { git chore \"release $1\"; git tag $1; git push --tags; }; f"
  mirror = "!git push mirror main"

  # Semantic commits
  feat = "!f() { git add .; git commit -m \"feat: $1\"; git push; git status; }; git sound-feat & f"
  fix = "!f() { git add .; git commit -m \"fix: $1\"; git push; git status; }; git sound-fix & f"
  refactor = "!f() { git add .; git commit -m \"refactor: $1\"; git push; git status; }; git sound-refactor & f"
  test = "!f() { git add .; git commit -m \"test: $1\"; git push; git status; }; f"
  style = "!f() { git add .; git commit -m \"style: $1\"; git push; git status; }; f"
  chore = "!f() { git add .; git commit -m \"chore: $1\"; git push; git status; }; f"
  perf = "!f() { git add .; git commit -m \"perf: $1\"; git push; git status; }; f"
  docs = "!f() { git add .; git commit -m \"docs: $1\"; git push; git status; }; f"
  build = "!f() { git add .; git commit -m \"build: $1\"; git push; git status; }; f"
  ci = "!f() { git add .; git commit -m \"ci: $1\"; git push; git status; }; f"

  # Sound effects
  sound-feat = "!powershell.exe -windowstyle hidden -file $(git get-path)/sounds/valorant-multikill-1.ps1;"
  sound-fix = "!powershell.exe -windowstyle hidden -file $(git get-path)/sounds/warzone-headshot.ps1;"
  sound-refactor = "!powershell.exe -windowstyle hidden -file $(git get-path)/sounds/angel-choir-ahhhh.ps1;"

  get-path = "!f() { \
    input=\"$(git config --list --show-origin | grep alias.get-path)\"; \
    file_path=$(echo "$input" | awk '{print $1}' | sed 's/^file://'); \
    dir_path=$(dirname "$file_path"); \
    echo "$dir_path"; \
  }; f"
