[user]
  name = nbabcock
  email = nathan.r.babcock@gmail.com
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFqd7Z6PvV3yqH298oTcit7Ta6WRop3I94yRaRdmA4mm
[core]
  autocrlf = false # use .gitattributes to enforce line endings on a per-repo basis as needed
  ignorecase = false

  # Configure 1Password SSH agent
  # https://developer.1password.com/docs/ssh/get-started/#step-4-configure-your-ssh-or-git-client
  sshCommand = C:/Windows/System32/OpenSSH/ssh.exe
[pgp]
  format = ssh
[gpg]
  format = ssh
[gpg "ssh"]
  # program should be overriden in ~/.gitconfig on each host
  program = "C:/Users/nbabcock/AppData/Local/1Password/app/8/op-ssh-sign.exe"
[commit]
  gpgsign = true
[init]
  defaultBranch = main
[rebase]
  autoStash = true
[merge]
  autoStash = true
  conflictStyle = diff3
[checkout]
  autostash = true
[pull]
  rebase = false
[push]
  autoSetupRemote = true
[rerere]
  enabled = true
#[submodule]
#  recurse = true
[diff]
  colormoved = "default"
  colormovedws = "allow-indentation-change"
[alias]
  # Simple aliases
  c = commit
  cm = commit -m
  cam = commit -am
  co = checkout
  a = add .
  p = push
  st = status
  sw = switch

  # Scripts
  up = "!git remote update -p; git merge --ff-only @{u}"
  undo = reset --soft HEAD^
  amend = "!git add .; git commit --amend --no-edit; git force; git status"
  initial = "!git add .; git commit -m \"initial commit \"; git push; git status"
  force = push -f
  aliases = config --get-regexp '^alias\\.'
  lazy = "!f() { git add .; git commit -m \"$1\"; git push; git status; }; f"
  release = "!f() { git chore \"release $1\"; git tag $1; git push --tags; }; f"
  mirror = "!git push mirror main"
  last = "!git log -1 --stat"
  diff-grep = "!echo \"ðŸ‘‰ Try invoking directly from bash via git-diff-grep\""

  # Semantic commits
  feat = "!f() { git add .; git commit -m \"feat: $1\"; git push; git status; }; f"
  fix = "!f() { git add .; git commit -m \"fix: $1\"; git push; git status; }; f"
  refactor = "!f() { git add .; git commit -m \"refactor: $1\"; git push; git status; }; f"
  test = "!f() { git add .; git commit -m \"test: $1\"; git push; git status; }; f"
  style = "!f() { git add .; git commit -m \"style: $1\"; git push; git status; }; f"
  chore = "!f() { git add .; git commit -m \"chore: $1\"; git push; git status; }; f"
  perf = "!f() { git add .; git commit -m \"perf: $1\"; git push; git status; }; f"
  docs = "!f() { git add .; git commit -m \"docs: $1\"; git push; git status; }; f"
  build = "!f() { git add .; git commit -m \"build: $1\"; git push; git status; }; f"
  ci = "!f() { git add .; git commit -m \"ci: $1\"; git push; git status; }; f"
